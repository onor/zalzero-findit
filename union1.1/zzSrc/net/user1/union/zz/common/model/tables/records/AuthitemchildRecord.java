/**
 * This class is generated by jOOQ
 */
package net.user1.union.zz.common.model.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.0"},
                            comments = "This class is generated by jOOQ")
public class AuthitemchildRecord extends org.jooq.impl.UpdatableRecordImpl<net.user1.union.zz.common.model.tables.records.AuthitemchildRecord> {

	private static final long serialVersionUID = 477055166;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [public.authitemchild.parent]
	 * REFERENCES authitem [public.authitem.name]
	 * </pre></code>
	 */
	public void setParent(java.lang.String value) {
		setValue(net.user1.union.zz.common.model.tables.Authitemchild.AUTHITEMCHILD.PARENT, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [public.authitemchild.parent]
	 * REFERENCES authitem [public.authitem.name]
	 * </pre></code>
	 */
	public java.lang.String getParent() {
		return getValue(net.user1.union.zz.common.model.tables.Authitemchild.AUTHITEMCHILD.PARENT);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [public.authitemchild.parent]
	 * REFERENCES authitem [public.authitem.name]
	 * </pre></code>
	 */
	public net.user1.union.zz.common.model.tables.records.AuthitemRecord fetchAuthitemByParent() {
		return create()
			.selectFrom(net.user1.union.zz.common.model.tables.Authitem.AUTHITEM)
			.where(net.user1.union.zz.common.model.tables.Authitem.AUTHITEM.NAME.equal(getValue(net.user1.union.zz.common.model.tables.Authitemchild.AUTHITEMCHILD.PARENT)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [public.authitemchild.child]
	 * REFERENCES authitem [public.authitem.name]
	 * </pre></code>
	 */
	public void setChild(java.lang.String value) {
		setValue(net.user1.union.zz.common.model.tables.Authitemchild.AUTHITEMCHILD.CHILD, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [public.authitemchild.child]
	 * REFERENCES authitem [public.authitem.name]
	 * </pre></code>
	 */
	public java.lang.String getChild() {
		return getValue(net.user1.union.zz.common.model.tables.Authitemchild.AUTHITEMCHILD.CHILD);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [public.authitemchild.child]
	 * REFERENCES authitem [public.authitem.name]
	 * </pre></code>
	 */
	public net.user1.union.zz.common.model.tables.records.AuthitemRecord fetchAuthitemByChild() {
		return create()
			.selectFrom(net.user1.union.zz.common.model.tables.Authitem.AUTHITEM)
			.where(net.user1.union.zz.common.model.tables.Authitem.AUTHITEM.NAME.equal(getValue(net.user1.union.zz.common.model.tables.Authitemchild.AUTHITEMCHILD.CHILD)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setCreateTime(java.sql.Timestamp value) {
		setValue(net.user1.union.zz.common.model.tables.Authitemchild.AUTHITEMCHILD.CREATE_TIME, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getCreateTime() {
		return getValue(net.user1.union.zz.common.model.tables.Authitemchild.AUTHITEMCHILD.CREATE_TIME);
	}

	/**
	 * An uncommented item
	 */
	public void setUpdateTime(java.sql.Timestamp value) {
		setValue(net.user1.union.zz.common.model.tables.Authitemchild.AUTHITEMCHILD.UPDATE_TIME, value);
	}

	/**
	 * An uncommented item
	 */
	public java.sql.Timestamp getUpdateTime() {
		return getValue(net.user1.union.zz.common.model.tables.Authitemchild.AUTHITEMCHILD.UPDATE_TIME);
	}

	/**
	 * Create a detached AuthitemchildRecord
	 */
	public AuthitemchildRecord() {
		super(net.user1.union.zz.common.model.tables.Authitemchild.AUTHITEMCHILD);
	}
}
