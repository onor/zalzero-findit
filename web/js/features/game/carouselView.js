// Generated by CoffeeScript 1.3.3

define(["../../config/config"], function(config) {
  return {
    drawCarousel: function(usersObject, appendto, gameLinkID, typeOfCarousel) {
      var acceptSpan, currentPlayerList, declineSpan, fbUser, remindUsersLeft, userAcceptDeclinedDiv, userAcceptDeclinedMsgDiv, userFacebookImgUrl, userObject, userRank, userRecodeDiv, userRecodeGameStartDateUserDiv, userRecodeImgDiv, userRecodeImgEl, userRecodeImgLevelEl, userRecodeLastPlayDiv, userRecodeLi, userRecodePlayStatusDiv, userRecodePlayerNameDiv, userRecodePlayerOnlineStatusDiv, userRecodePlayerRemindDiv, userRecodePlayerRoundNoDiv, userRecodePlayerTotalUserDiv, usersObjectPastRound, x, _results;
      currentPlayerList = document.getElementById(appendto);
      usersObjectPastRound = usersObject;
      usersObject = jQuery.parseJSON(usersObject.PLRS);
      remindUsersLeft = {};
      $("#" + appendto).empty();
      _results = [];
      for (x in usersObject) {
        userObject = jQuery.parseJSON(usersObject[x]);
        remindUsersLeft[userObject.PFB] = {
          GSS: userObject.GSS,
          CRS: userObject.CRS
        };
        if (userObject.GSS === 3 || userObject.GSS === 5) {
          continue;
        }
        userRecodeLi = document.createElement("li");
        userRecodeLi.style.display = "block";
        userRecodeDiv = document.createElement("div");
        userRecodeDiv.className = "userArea";
        userRecodeDiv.id = "thisgame_seat_" + x;
        userRecodeImgDiv = document.createElement("div");
        userRecodeImgDiv.className = "userAreaImg";
        userRecodeImgEl = document.createElement("img");
        userRecodeImgEl.className = "backendImage";
        userRecodeImgDiv.appendChild(userRecodeImgEl);
        if (typeof userObject.PL !== "undefined") {
          if (parseInt(userObject.PL) === 0) {
            userObject.PL = 1;
          }
          userRecodeImgLevelEl = document.createElement("img");
          userRecodeImgLevelEl.className = "userlevelbelt otherbelt";
          userRecodeImgLevelEl.src = baseUrl + "/images/zalerio_1.2/4.ingame_ui/carauselbelts_otherplayers/" + config.userLevelImg[parseInt(userObject.PL) - 1];
          userRecodeImgDiv.appendChild(userRecodeImgLevelEl);
        }
        userRecodePlayerNameDiv = document.createElement("div");
        userRecodePlayerNameDiv.className = "userAreaName";
        userRecodeLastPlayDiv = document.createElement("div");
        userRecodeLastPlayDiv.className = "userLastPlayed";
        userRecodePlayStatusDiv = document.createElement("div");
        userRecodePlayStatusDiv.className = "userPlayStatus";
        userRecodePlayerRemindDiv = document.createElement("div");
        userRecodePlayerRemindDiv.className = "userRemind";
        userRecodePlayerRoundNoDiv = document.createElement("div");
        userRecodePlayerRoundNoDiv.className = "userRoundNo";
        userRecodePlayerOnlineStatusDiv = document.createElement("div");
        userRecodePlayerOnlineStatusDiv.className = "userOnlineStatus";
        userAcceptDeclinedDiv = document.createElement("div");
        userAcceptDeclinedDiv.className = "userAcceptDeclinedDiv";
        userAcceptDeclinedMsgDiv = document.createElement("div");
        userAcceptDeclinedMsgDiv.innerHTML = "Invited you (NEW)";
        acceptSpan = document.createElement("span");
        acceptSpan.className = "acceptSpan";
        acceptSpan.innerHTML = "Accept";
        acceptSpan.onclick = function() {
          return acceptInvitation(gameLinkID);
        };
        declineSpan = document.createElement("span");
        declineSpan.innerHTML = "Decline";
        declineSpan.className = "declineSpan";
        declineSpan.onclick = function() {
          return sendDeclinedToServer(userObject.PSI);
        };
        userRecodeDiv.appendChild(userRecodeImgDiv);
        userRecodeDiv.appendChild(userRecodePlayerNameDiv);
        userRecodePlayStatusDiv.innerHTML = "not played yet";
        if (parseInt(userObject.GSS) !== 1) {
          userRecodeDiv.appendChild(userRecodeLastPlayDiv);
          userRecodeDiv.appendChild(userRecodePlayStatusDiv);
          userRecodeDiv.appendChild(userRecodePlayerRemindDiv);
        } else if (parseInt(userObject.UI) === parseInt(zzGlobals.currentUserDBId)) {
          userAcceptDeclinedDiv.appendChild(userAcceptDeclinedMsgDiv);
          userAcceptDeclinedDiv.appendChild(acceptSpan);
          userAcceptDeclinedDiv.appendChild(declineSpan);
          userRecodeDiv.appendChild(userAcceptDeclinedDiv);
          userRecodePlayStatusDiv.innerHTML = '';
        } else {
          userRecodeDiv.appendChild(userRecodePlayStatusDiv);
          userRecodeDiv.appendChild(userRecodePlayerRemindDiv);
          userRecodePlayStatusDiv.innerHTML = 'not accepted';
        }
        userRecodeDiv.appendChild(userRecodePlayerRoundNoDiv);
        userRecodeDiv.appendChild(userRecodePlayerOnlineStatusDiv);
        userRecodeLi.appendChild(userRecodeDiv);
        currentPlayerList.appendChild(userRecodeLi);
        userFacebookImgUrl = "https://graph.facebook.com/" + userObject.PFB + "/picture";
        userRecodeImgEl.src = userFacebookImgUrl;
        if (userObject.PDN) {
          userRecodePlayerNameDiv.innerHTML = userObject.PDN;
        }
        if (userObject.PLP) {
          userRecodeLastPlayDiv.innerHTML = userObject.PLP;
        }
        if (userObject.PCR) {
          userRecodePlayerRoundNoDiv.innerHTML = userObject.PCR;
        }
        if (typeOfCarousel && usersObjectPastRound.SD) {
          userRecodeGameStartDateUserDiv = document.createElement("div");
          userRecodeGameStartDateUserDiv.className = "userStartDate";
          userRecodeGameStartDateUserDiv.innerHTML = usersObjectPastRound.SD;
          userRecodeDiv.appendChild(userRecodeGameStartDateUserDiv);
        }
        if (typeOfCarousel === "pastGame" && usersObjectPastRound.TP && userObject.PR) {
          userRecodePlayerTotalUserDiv = document.createElement("div");
          userRecodePlayerTotalUserDiv.className = "userTotal";
          if (userObject.PR === "1") {
            userRank = userObject.PR + "<sup>st</sup>";
          } else if (userObject.PR === "2") {
            userRank = userObject.PR + "<sup>nd</sup>";
          } else if (userObject.PR === "3") {
            userRank = userObject.PR + "<sup>rd</sup>";
          } else {
            userRank = userObject.PR + "<sup>th</sup>";
          }
          userRecodePlayerTotalUserDiv.innerHTML = userRank + "/" + usersObjectPastRound.TP;
          userRecodeDiv.appendChild(userRecodePlayerTotalUserDiv);
        }
        if (userObject.PDN && zzGlobals.clientVars.UI) {
          if (userObject.CRS === 0) {
            if (zzGlobals.clientVars.UI === userObject.UI) {
              userRecodePlayerRemindDiv.innerHTML = "place your tiles...";
            } else {
              if (zzGlobals.clientVars.UI !== userObject.UI) {
                fbUser = {};
                fbUser[userObject.PFB] = {
                  GSS: userObject.GSS,
                  CRS: userObject.CRS
                };
                remindUserAdd(gameLinkID, remindUsersLeft, x, fbUser, userRecodePlayerRemindDiv);
                userRecodePlayerRemindDiv.innerHTML = "remind " + userObject.PDN.slice(0, 6);
              }
            }
          }
        }
        if (userObject.CRS === 0) {
          userRecodePlayStatusDiv.className = "userPlayStatus";
        } else if (userObject.CRS === 5) {
          userRecodePlayStatusDiv.innerHTML = '...playing now';
          userRecodePlayStatusDiv.className = "userPlayStatus green";
        } else if (userObject.CRS === 9) {
          userRecodePlayStatusDiv.innerHTML = "finished round";
          userRecodePlayStatusDiv.className = "userPlayStatus green";
        }
        if (userObject.PON === 1) {
          _results.push(userRecodePlayerOnlineStatusDiv.className = "userOnlineStatus status_online");
        } else {
          _results.push(userRecodePlayerOnlineStatusDiv.className = "userOnlineStatus");
        }
      }
      return _results;
    }
  };
});
