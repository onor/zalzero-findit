// Generated by CoffeeScript 1.3.3

define(['zalzero.utils', 'zalzero.deffereds', 'zalzero.config'], function(utils, deffereds, config) {
  var _arrow, _betCellsArr, _def, _finish, _initTiles, _initialize, _moveBetGenerator, _popup, _processBetsMove;
  _def = null;
  _arrow = null;
  _popup = null;
  _betCellsArr = $.map($.grep(config.BETS_ARR, function(obj, i) {
    return obj.showFirst === true;
  }), function(obj, e) {
    return obj.id;
  });
  _moveBetGenerator = function(elem, dest) {
    return function(arg, def) {
      var $e, destOffset, sourceOffset;
      $e = $(elem);
      sourceOffset = $e.offset();
      destOffset = dest.offset();
      $e.addClass('draggableBetsClick').addClass('transition').removeClass('draggableBets');
      $e.appendTo(document.body);
      $e.css({
        left: sourceOffset.left - 7,
        top: sourceOffset.top - 7
      });
      setTimeout((function() {
        $e.css({
          left: destOffset.left - 10,
          top: destOffset.top - 11
        });
        setTimeout((function() {
          dest.addClass('box-newBet');
          $e.remove();
          return def.resolve();
        }), 300);
        return true;
      }), 5);
      return true;
    };
  };
  _processBetsMove = function() {
    var funcs;
    funcs = $.map($('.draggableBets'), function(elem, index) {
      return _moveBetGenerator(elem, $("#" + _betCellsArr[index]));
    });
    funcs.push(function(args, def) {
      return _finish();
    });
    deffereds.chainDeffereds(funcs);
    return true;
  };
  _initTiles = function() {
    $('.draggableBets:first').draggable({
      start: function(e, ui) {
        $(this).css({
          opacity: '0'
        });
        return true;
      },
      stop: function(e, ui) {
        $(this).css({
          opacity: '1'
        });
        return true;
      },
      helper: function(e) {
        return $("<div class=\"draggableBetsClick tutorial-highlight\"></div>");
      }
    });
    return $('.box-blank').droppable({
      drop: function(e, ui) {
        ui.draggable.remove();
        ui.helper.remove();
        _arrow.remove();
        $(this).addClass('box-newBet');
        _processBetsMove();
        config.BETS_ARR.push({
          id: this.id,
          className: 'box-currentRoundCorrect',
          content: '2'
        });
        return true;
      }
    });
  };
  _initialize = function(args, def) {
    _def = def;
    utils.addHighlight('#mainGame');
    utils.addLowHighlight('.friendChallenge');
    utils.activateAccordion(1);
    $('#gameBetPanel').on('click', '.draggableBets', function(e) {
      return false;
    });
    _popup = utils.createPopup(200, 200, config.POPUP_MESSAGE_STEP_2, function(e) {
      _arrow = utils.createArrow(326, 0, 'top');
      _initTiles();
      return false;
    });
    return true;
  };
  _finish = function() {
    _arrow.remove();
    utils.removeHighlight('#mainGame');
    utils.removeLowHighlight('.friendChallenge');
    return _def.resolve();
  };
  return {
    chainFunc: function(arg, def) {
      _initialize(null, def);
      return true;
    }
  };
});
