define [], () ->
    docElems = {}
    DEFAULT_PLAYER_IMG_URL = "/olotheme/images/fbDefaultUser.gif"
    tilesIdxVOs = {}
    currentBets = {}
    currentBetsIdx = {}
    betsPanelIndexVO = {}
    currentRoundBidPlaced = -1
    internalDNDType = "text/x-betiddata"
    tileClassOverload =
      BASE_TILE_CLASS:
        N: "box-blank box-black"
        Z: "box-blankZoom box-blackZoom"

      OTHER_TURN:
        N: "box-previousRoundOtherPlayer"
        Z: "box-previousRoundOtherPlayerZoom"

      PRV_CURRPLYR_CORRECT_TILE:
        N: "box-previousRoundCurrentPlayerCorrect"
        Z: "box-previousRoundCurrentPlayerCorrectZoom"

      PRV_CURRPLYR_INCORRECT_TILE:
        N: "box-previousRoundCurrentPlayerIncorrect"
        Z: "box-previousRoundCurrentPlayerIncorrectZoom"

      CURRENT_CORRECT_TILE:
        N: "box-currentRoundCorrect"
        Z: "box-currentRoundCorrectZoom"

      CURRENT_INCORRECT_TILE:
        N: "box-currentRoundIncorrect"
        Z: "box-currentRoundIncorrectZoom"

      CURR_PLYR_FIG_COMPLETE:
        N: "box-dizitCompleted"
        Z: "box-dizitCompletedZoom"

      CURR_PLYR_NEWBET:
        N: "box-newBet"
        Z: "box-newBetZoom"

      JOKER_BET:
        N: "joker"
        Z: "jokerZoom"

      SUPPER_JOKER_BET:
        N: "superJoker"
        Z: "superJokerZoom"

    flag_zoomTrue = false
    currPlayerFigVOs = {}
    playerBetTiles = {}
    boardVOCodes =
      TILE_COUNT: "BC"
      PLAYER_INFO_OBJ: "PR"
      FIGURE_ID: "CF"
      BET_WINNER: "BW"

    betChangeCode =
      PLAYER_SEAT_ID: "PS"
      TILE_COUNT: "BC"
      BET_OBJ: "PB"
      ROUND_ID: "PR"

    betChangeVOs = {}
    boardVOs = {}
    # message name container
    zalerioCMDListners =
      ORIG_FIGS: "OF"
      BET_RESPONSE: "PB"
      BET_CHANGES: "CB"
      RESIGN_GAME:"RG"
      CLOSE_INVITE : "CI"
      RIGHT_HUD:"MT"
      DECLINE_STATUS:"DG"

    flag_roundDrawn = false
    coordCodes =
      COORD_COUNT: "BC"
      COORD_NUM: "CN"
      COORD_X: "CX"
      COORD_Y: "CY"

    zalerioMapType = ORIG_MAP:
      code: "OF"
      className: "box-RevealingNumber"

    roundVOsIdx = {}
    board_X = null
    board_Y = null
    roundBets = null
    roundVOs = {}
    figureDetailsVO = {}

    initBoard = ->
      alert('initBoard')
      console.log "BoardXY : " + zzGlobals.roomVars[zzGlobals.roomCodes.BOARD_XY] if isDevEnvironment
      boardDimension = zzGlobals.roomVars[zzGlobals.roomCodes.BOARD_XY].split(":")
      board_X = boardDimension[0]
      board_Y = boardDimension[1]
      drawGameBoard()
      
    initRoundBets = ->
      console.log "Round Bets : " + zzGlobals.roomVars[zzGlobals.roomCodes.ROUND_NOOFBETS] if isDevEnvironment
      roundBets = zzGlobals.roomVars[zzGlobals.roomCodes.ROUND_NOOFBETS]
      reDrawBetsPanel()
      
    parseRounds = (el, val) ->
      console.log "parse Ar data : " + zzGlobals.roomVars[zzGlobals.roomCodes.ROOM_ALLROUNDS] if isDevEnvironment
      obj = jQuery.parseJSON(val)
      roundVOs = {}
      for i of obj
        roundVOs[i] = jQuery.parseJSON(obj[i])
      refreshRoundsPanel()
         
    updateFigureDetails = (evt, val) ->
      figureDetailsVO = {}
      figureDetailsVO = jQuery.parseJSON(val)  if val?
    
    updateBoardVars = (evt, val) ->
      currPlayerFigVOs = {}
      playerBetTiles = {}
      el = document.getElementById("loadingGame")
      el.style.display = "none"  if (el?) and (el.style?)
      boardVOs = {}
      boardObjs = jQuery.parseJSON(val)
      for i of boardObjs
        boardStr = boardObjs[i]
        boardObj = jQuery.parseJSON(boardStr)
        if boardObj["PR"]?
          boardObj["PR"] = jQuery.parseJSON(boardObj["PR"])
          for seatId of boardObj["PR"]
            if boardObj["CF"]?
              playerTiles = {}
              playerTiles = playerBetTiles[seatId]  if playerBetTiles[seatId]
              playerTiles[i] = 1
              playerBetTiles[seatId] = playerTiles
              if zzGlobals.clientVars[zzGlobals.clientCodes.USER_SEAT_ID] is seatId
                noOfTiles = 0
                noOfTiles = currPlayerFigVOs[boardObj["CF"]]  if currPlayerFigVOs[boardObj["CF"]]?
                currPlayerFigVOs[boardObj["CF"]] = ++noOfTiles
        boardVOs[i] = boardObj
      refreshGameBoard()
    
    refreshRoundsPanel = ->
      drawRoundsPanel()  unless flag_roundDrawn
      lastRoundId = null
      lastEl = null
      for roundId of roundVOs
        el = roundVOsIdx[roundId]
        roundEndTimeTTL = parseInt(roundVOs[roundId]["EM"])
        if roundEndTimeTTL > 0
          el.className = "notPlayedRound"
        else
          el.className = "doneRound"
        el.className = "currentRound"  if roundId is zzGlobals.roomVars[zzGlobals.roomCodes.CURRENTROUND]
        lastEl = el
        lastRoundId = roundId
      if lastEl and lastRoundId
        if lastRoundId is zzGlobals.roomVars[zzGlobals.roomCodes.CURRENTROUND]
          lastEl.className = "currentFinalRound"
        else
          lastEl.className = "finalRound"
              
    drawBetPanel = ->
      betsPanelIndexVO = {}
      betsPanel = document.getElementById("gameBetPanel")
      betsPanel.innerHTML = ""
      _results = []
      i = 0
      while (if 0 <= roundBets then i < roundBets else i > roundBets)
        currentBetId = "bet_" + i
        divNbrPanel = document.createElement("li")
        divNbrPanel.className = "draggableBets"
        divNbrPanel.id = currentBetId
        divNbrPanel.draggable = true  if divNbrPanel.draggable?
        addEventHandler divNbrPanel, "dragstart", handleDragStart, false
        divAnc = document.createElement("a")
        divAnc.className = "nbrs"
        divAnc.id = "new-" + i
        bets[i] = divAnc.id
        divNbrPanel.appendChild divAnc
        betsPanel.appendChild divNbrPanel
        betsPanelIndexVO[currentBetId] = divNbrPanel
        _results.push flag_roundBetsDrawn = true
        (if 0 <= roundBets then i++ else i--)
      _results
    
    getTileClass = (tileClassOverLoadObj) ->
      if flag_zoomTrue
        if tileClassOverLoadObj
          if tileClassOverLoadObj.N
            if tileClassOverLoadObj.Z
              return " " + tileClassOverLoadObj.N + " " + tileClassOverLoadObj.Z
            else
              return " " + tileClassOverLoadObj.N + " "
      else
        return " " + tileClassOverLoadObj.N + " "  if tileClassOverLoadObj.N  if tileClassOverLoadObj
      " "
    # Reset drop zone
    resetDropZoneOnGameBoard = ->
      _results = []
      for tileIdx of tilesIdxVOs
        continue  unless __hasProp_.call(tilesIdxVOs, tileIdx)
        currentEl = tilesIdxVOs[tileIdx]
        switch currentEl.getAttribute("droppable")
          when "1"
            _results.push currentEl.setAttribute("droppable", "2")
          when "0"
            _results.push currentEl.setAttribute("droppable", "-1")
          else
            _results.push undefined
      _results
          
    # Redraw bets panel
    reDrawBetsPanel : ->
      try
      	if tutorial is true
      		return
      playButtonEl = document.getElementById("placeBetOnServer")
      if currentRoundBidPlaced > 0
        i = 0
        while (if 0 <= roundBets then i < roundBets else i > roundBets)
          currentBetId = "bet_" + i
          el = betsPanelIndexVO[currentBetId]
          el.className = "betsAlreadyPlaced"
          el.dragBet = 0
          el.draggable = false  if el.draggable?
          removeEventHandler el, "dragstart", handleDragStart, false
          (if 0 <= roundBets then i++ else i--)
        playButtonEl.href = "#Already Placed Bets"
        playButtonEl.className = 'bet_done'
        playButtonEl.parentNode.setAttribute "class", "bottomHUDbuttons-play-gray"
        removeEventHandler playButtonEl, "click", sendPlaceBetRequest, true
      else
        count = 0
        for k of currentBets
          count++
        if count < 9
          playButtonEl.parentNode.setAttribute "class", "bottomHUDbuttons-play-gray"
        else
          playButtonEl.parentNode.setAttribute "class", ""
        drawBetPanel()  unless flag_roundBetsDrawn
        _results = []
        i = 0
        while (if 0 <= roundBets then i < roundBets else i > roundBets)
          currentBetId = "bet_" + i
          el = betsPanelIndexVO[currentBetId]
          flag_alreadyUsed = false
          for k of currentBets
            continue  unless __hasProp_.call(currentBets, k)
            usedBetId = currentBets[k]
            if usedBetId is currentBetId
              flag_alreadyUsed = true
              break
          if flag_alreadyUsed
            el.className = "usedDraggableBets"
            el.dragBet = 0
            el.draggable = false  if el.draggable?
            removeEventHandler el, "dragstart", handleDragStart, false
          else
            el.className = "draggableBets"
            el.dragBet = 1
            el.draggable = true  if el.draggable?
            addEventHandler el, "dragstart", handleDragStart, false
          playButtonEl.href = "#Place Bets"
          playButtonEl.className = ""
          _results.push addEventHandler(playButtonEl, "click", sendPlaceBetToServer, true)
          (if 0 <= roundBets then i++ else i--)
        _results 
     
    refreshGameBoard : ->
      csBlankTileClassName = getTileClass(tileClassOverload.BASE_TILE_CLASS)
      currentTileClass = ""
      currentTileVal = ""
      currentEl = null
      currentSeatId = zzGlobals.clientVars[zzGlobals.clientCodes.USER_SEAT_ID]
      currentTilePriority = 0
      for tileIdx of tilesIdxVOs
        flag = false
        continue  unless __hasProp_.call(tilesIdxVOs, tileIdx)
        currentEl = tilesIdxVOs[tileIdx]
        currentTilePriority = 0
        currentTileClass = csBlankTileClassName
        dropEnable = true
        currentEl.draggable = false
        currentEl.dragBet = 0
        currentTileVal = ""
        oldDraggableState = currentEl.draggable
        if boardVOs[tileIdx]?
          if boardVOs[tileIdx][boardVOCodes.FIGURE_ID]
            currentFigId = boardVOs[tileIdx][boardVOCodes.FIGURE_ID]
            if currentFigId.indexOf("_NUMERIC_12") isnt -1 or currentFigId.indexOf("_NUMERIC_13") isnt -1 or currentFigId.indexOf("_NUMERIC_14") isnt -1 or currentFigId.indexOf("_NUMERIC_15") isnt -1 or currentFigId.indexOf("_NUMERIC_16") isnt -1 or currentFigId.indexOf("_NUMERIC_17") isnt -1
              dropEnable = false
              currentTileClass = csBlankTileClassName + getTileClass(tileClassOverload.JOKER_BET)
              currentTileVal = ""
            else unless currentFigId.indexOf("_NUMERIC_11") is -1
              dropEnable = false
              currentTileClass = csBlankTileClassName + getTileClass(tileClassOverload.SUPPER_JOKER_BET)
              currentTileVal = ""
          unless boardVOs[tileIdx][boardVOCodes.FIGURE_ID]
            currentTileClass = csBlankTileClassName + getTileClass(tileClassOverload.OTHER_TURN)
            currentTileVal = ""
          playersObjs = boardVOs[tileIdx][boardVOCodes.PLAYER_INFO_OBJ]
          for playerSeatId of playersObjs
            if playerSeatId is currentSeatId
              dropEnable = false
              currentFigId = boardVOs[tileIdx][boardVOCodes.FIGURE_ID]
              if currentFigId
                currentTileClass = csBlankTileClassName + getTileClass(tileClassOverload.PRV_CURRPLYR_CORRECT_TILE)
                console.log "figureDetailsVO", currentFigId if isDevEnvironment
                if currPlayerFigVOs[currentFigId] is figureDetailsVO[currentFigId]
                  currentTilePriority = 10
                  currentTileClass = csBlankTileClassName + getTileClass(tileClassOverload.CURR_PLYR_FIG_COMPLETE)
                  if currentFigId.indexOf("_NUMERIC_12") isnt -1 or currentFigId.indexOf("_NUMERIC_13") isnt -1 or currentFigId.indexOf("_NUMERIC_14") isnt -1 or currentFigId.indexOf("_NUMERIC_15") isnt -1 or currentFigId.indexOf("_NUMERIC_16") isnt -1 or currentFigId.indexOf("_NUMERIC_17") isnt -1
                    currentTileClass = csBlankTileClassName + getTileClass(tileClassOverload.JOKER_BET)
                    flag = true
                  else unless currentFigId.indexOf("_NUMERIC_11") is -1
                    currentTileClass = csBlankTileClassName + getTileClass(tileClassOverload.SUPPER_JOKER_BET)
                    flag = true
                if flag
                  currentTileVal = ""
                else
                  currentTileVal = boardVOs[tileIdx][boardVOCodes.TILE_COUNT]
              else
                currentTileClass = csBlankTileClassName + getTileClass(tileClassOverload.PRV_CURRPLYR_INCORRECT_TILE)
                currentTileVal = " "
              break
        lastRound = false
        lastRound = true  if zzGlobals.roomVars.FR is "1"
        unless lastRound
          if (currentBets[tileIdx]?) and currentBets[tileIdx] isnt null
            dropEnable = false
            currentEl.draggable = true
            currentEl.dragBet = 1
            currentEl.setAttribute "placedBetId", currentBets[tileIdx]
            currentTileClass = csBlankTileClassName + getTileClass(tileClassOverload.CURR_PLYR_NEWBET)
            addEventHandler currentEl, "dragstart", handleDragStartWithinBoard, false
            currentTileVal = ""
          if currentTilePriority < 10 and (betChangeVOs[tileIdx]?)
            if parseInt(betChangeVOs[tileIdx]) is 1
              currentTileClass = csBlankTileClassName + getTileClass(tileClassOverload.CURR_PLYR_NEWBET)
              currentTileVal = ""
            else
              currentTileClass = csBlankTileClassName + getTileClass(tileClassOverload.CURR_PLYR_NEWBET)
              currentTileVal = ""
        currentTileClass += " boardRowLastTile "  if (parseInt(tileIdx) % board_X) is 0
        dropEnableVal = null
        console.log "[dropEnable:", dropEnable, ",currentEl:", currentEl.getAttribute("droppable")  if currentEl.id is "boardTile-35" and isDevEnvironment
        switch currentEl.getAttribute("droppable")
          when "-1"
            dropEnableVal = "1"  if dropEnable is true
          when "0"
            dropEnableVal = "1"  if dropEnable is true
          when "1"
            dropEnableVal = "0"  if dropEnable is false
          when "2"
            dropEnableVal = "0"  if dropEnable is false
        currentEl.setAttribute "droppable", "1"  unless currentEl.getAttribute("droppable")?
        currentEl.setAttribute "droppable", dropEnableVal  if dropEnableVal isnt null
        currentEl.className = currentTileClass
        currentEl.innerHTML = currentTileVal
      resetDropZoneOnGameBoard()   